=== Git in Bash

(((Bash)))(((Tab-Komplettierung, bash)))(((Shell-Prompts, bash)))
Wenn du Bash benutzt, kannst du einige der Funktionen deiner Shell nutzen, um deinen Umgang mit Git viel angenehmer zu gestalten.
Git wird mit Plugins für mehrere Shells ausgeliefert. Sie sind jedoch nicht standardmäßig aktiviert.

Zunächst musst du eine Kopie der Vervollständigungsdatei aus dem Quellcode der von dir verwendeten Git-Version abrufen.
Überprüfe deine Version, indem du `git version` eingibst. Verwenden dann `git checkout tags/vX.Y.Z`, wobei `vX.Y.Z` der Version von Git entspricht, die du aktuell nutzt.
Kopiere die Datei `contrib/completion/git-completion.bash` an einen geeigneten Ort, z.B. in deinem Home-Verzeichnis und füge folgendes zu deiner `.bashrc` hinzu:

[source,console]
----
. ~/git-completion.bash
----

Wechsel anschließend in ein Git-Repository und gib Folgendes ein:

[source,console]
----
$ git chec<tab>
----

…und Bash vervollständigt dies automatisch zu `git checkout`.
Dies funktioniert mit allen Unterbefehlen, Befehlszeilenparametern sowie Remote und Referenznamen von Git, sofern dies erforderlich ist.

Es ist auch nützlich, die Eingabeaufforderung so anzupassen, dass Informationen zum Git-Repository des aktuellen Verzeichnisses angezeigt werden.
Dies kann so einfach oder komplex sein, wie du möchtest. Im Allgemeinen gibt es jedoch einige wichtige Informationen, die die meisten Benutzer benötigen, z.B. den aktuellen Branch und den Status des Arbeitsverzeichnisses.
Um diese zu deiner Eingabeaufforderung hinzuzufügen, kopiere einfach die Datei `contrib/completion/git-prompt.sh` aus dem Quellrepository von Git in dein Home Verzeichnis. Füge deiner `.bashrc` Datei folgendes hinzu:

[source,console]
----
. ~/git-prompt.sh
export GIT_PS1_SHOWDIRTYSTATE=1
export PS1='\w$(__git_ps1 " (%s)")\$ '
----

Das `\w` bedeutet das Ausgeben des aktuellen Arbeitsverzeichnisses, das `\$` gibt den  `$` Teil der Eingabeaufforderung aus und `__git_ps1 "(% s)"` ruft die von` git-prompt.sh` bereitgestellte Funktion mit einem Formatierungsargument auf.
Jetzt sieht deine Bash-Eingabeaufforderung so aus, wenn du dich irgendwo in einem Git Projekt befindest:

.Customized `bash` prompt
image::images/git-bash.png[Customized `bash` prompt]

Beide Skripte werden mit hilfreicher Dokumentation geliefert. Weitere Informationen findest du in den Skripten `git-completion.bash` und `git-prompt.sh` selbst.

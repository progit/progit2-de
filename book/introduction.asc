[preface]
== Einleitung

include::translation_note.asc[]

Sie sind im Begriff, viele Stunden mit dem Lesen eines Buches über Git zu verbringen.
Nehmen wir uns eine Minute Zeit, um zu erklären, was wir für Sie auf Lager haben.
Auf dieser Seite finden Sie eine kurze Zusammenfassung der zehn Kapitel und drei Anhänge dieses Buches.

In *Kapitel 1* werden wir Version Control Systeme (VCSs) und die Grundlagen von Git behandeln – kein technisches Fachwissen, nur das was mit Git verbunden ist, warum es in einem Land voller VCSs entstanden ist, was es auszeichnet und warum so viele Menschen es benutzen.
Dann werden wir beschreiben, wie Sie Git herunterladen und zum ersten Mal einrichten können, wenn Sie es noch nicht auf Ihrem System installiert haben.

In *Kapitel 2* gehen wir auf die grundlegende Git-Verwendung ein – wie Sie Git in den 80% der Fälle verwenden, denen Sie am häufigsten begegnen.
Nachdem Sie dieses Kapitel gelesen haben, sollten Sie in der Lage sein, ein Repository zu klonen, zu sehen, was in der Verlaufshistorie des Projekts passiert ist, Dateien zu modifizieren und mit Anpassungen beizutragen.
Angenommen dieses Buch geht in diesem Augenblick in Flammen auf, dann sollten Sie trotzdem schon in der Lage sein, so weit bei der Anwendung von Git zu helfen, um die Zeit zu überbrücken bis ein neues Exemplar dieses Buches beschafft ist.

In *Kapitel 3*  geht es um das Branching-Modell von Git, das oft als seine Killer-Funktion beschrieben wird.
Hier erfahren Sie, was Git wirklich von der Masse abhebt.
Wenn Sie das Kapitel zu Ende gebracht haben, werden Sie vielleicht in einem ruhigen Moment darüber nachdenken, wie sie ohne das Branching von Git leben konnten.

*Kapitel 4* befasst sich mit Git auf dem Server.
Mit diesem Kapitel wenden wir uns an diejenigen von Ihnen, die Git innerhalb Ihrer Organisation oder auf Ihrem eigenen persönlichen Server für die gemeinsame Entwicklung einrichten möchten.
Wir werden auch verschiedene Hosting-Optionen erörtern, falls Sie es vorziehen, dass jemand anderes diese Aufgabe für Sie übernimmt.

*Kapitel 5* geht ausführlich auf verschiedene dezentrale Workflows ein und wie man sie mit Git realisiert.
Wenn Sie dieses Kapitel durchgearbeitet haben, sollten Sie in der Lage sein, professionell mit mehreren Remote-Repositorys zu arbeiten, Git über E-Mail zu verwenden und geschickt mit zahlreichen Remote-Branches und beigesteuerten Patches zu hantieren.

*Kapitel 6* befasst sich detailliert mit dem GitHub-Hosting-Service und dem Tooling.
Wir behandeln die Anmeldung und Verwaltung eines Kontos, die Erstellung und Nutzung von Git-Repositorys, gemeinsame Workflows, um zu Projekten beizutragen und Beiträge für Ihre Projekte anzunehmen, die Programmoberfläche von GitHub und viele kleine Tipps, die Ihnen das tägliche Arbeiten im Allgemeinen erleichtern.

*Kapitel 7* befasst sich mit anspruchsvollen Git-Befehlen.
 Hier erfahren Sie mehr über Themen wie das Beherrschen des „furchterregenden“ Reset-Befehls, die Verwendung der Binärsuche zur Identifizierung von Fehlern, die Bearbeitung des Verlaufs, die detaillierte Auswahl der Revision und vieles mehr.
 Dieses Kapitel wird Ihr Wissen über Git abrunden, so dass Sie ein echter Meister werden.

*Kapitel 8* behandelt die Konfiguration Ihrer individuellen Git-Umgebung.
Dazu gehört die Einrichtung von Hook-Skripten zur Durchsetzung oder Unterstützung angepasster Regeln und die Verwendung von Konfigurationseinstellungen für die Benutzerumgebung, damit Sie so arbeiten können, wie sie es sich vorstellen.
Wir werden auch die Erstellung eines eigenen Skript-Sets für die Umsetzung einer benutzerdefinierten Commit-Richtlinie in die Praxis erörtern.

*Kapitel 9* beschäftigt sich mit Git und anderen VCS-Systemen.
Dazu gehört die Verwendung von Git in einer Subversion-Umgebung (SVN-Umgebung) und die Umwandlung von Projekten aus anderen VCSs nach Git.
Viele Unternehmen verwenden immer noch SVN und sind nicht dabei, das zu ändern, aber an dieser Stelle haben Sie die unglaubliche Leistungsfähigkeit von Git kennengelernt.
Dieses Kapitel zeigt Ihnen, wie Sie damit umgehen können, wenn Sie noch einen SVN-Server verwenden müssen.
Wir besprechen auch, wie man Projekte aus unterschiedlichen Systemen importiert, falls Sie alle davon überzeugt haben, den Sprung zu wagen.

*Kapitel 10* vertieft die dunklen und zugleich wundervollen Tiefen der Git-Interna.
Jetzt, da Sie alles über Git wissen und es mit Macht und Eleganz bedienen können, können Sie weiter darüber reden, wie Git seine Objekte speichert, was das Objektmodell ist, Einzelheiten zu Packfiles, Server-Protokollen und vielem mehr.
Im gesamten Buch werden wir auf Abschnitte dieses Kapitels Bezug nehmen.
Falls Sie an diesem Punkt das Bedürfnis haben, tiefer in die technischen Details einzutauchen und so sind wie wir, sollten Sie vielleicht zuerst Kapitel 10 lesen.
Das überlassen wir ganz Ihnen.

In *Anhang A* schauen wir uns eine Reihe von Beispielen für den Git-Einsatz in verschiedenen speziellen Anwendungsumgebungen an.
Wir befassen uns mit einer Anzahl verschiedener GUIs und Entwicklungs-Umgebungen, in denen Sie Git einsetzen könnten und welche verfügbar sind.
Wenn Sie an einem Überblick über die Verwendung von Git in Ihrer Shell, Ihrer IDE oder Ihrem Texteditor interessiert sind, schauen Sie hier nach.

In *Anhang B* erkunden wir das Scripting und die Erweiterung von Git durch Tools wie libgit2 und JGit.
Wenn Sie an der Entwicklung komplexer, schneller und benutzerdefinierter Tools interessiert sind und einen Low-Level-Git-Zugang benötigen, können Sie hier nachlesen, wie diese Szene ausschaut.

Schließlich gehen wir in *Anhang C* alle wichtigen Git-Befehle einzeln durch und wiederholen, wo wir sie in dem Buch behandelt haben und was wir dabei gemacht haben.
Wenn die Frage beantwortet werden soll, wo im Buch wir einen bestimmten Git-Befehl verwendet haben, können Sie das hier nachlesen.

Lassen Sie uns beginnen.
